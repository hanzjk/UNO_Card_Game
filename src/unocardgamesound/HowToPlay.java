/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unocardgamesound;


public class HowToPlay extends javax.swing.JFrame {

    /**
     * Creates new form HowToPlay
     */
    public HowToPlay() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        text = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HOW TO PLAY");
        setLocation(new java.awt.Point(100, 100));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unocardgamesound/images/BackButton.png"))); // NOI18N
        backButton.setContentAreaFilled(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 540, -1, -1));

        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unocardgamesound/images/home.png"))); // NOI18N
        homeButton.setContentAreaFilled(false);
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1039, 523, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("HOW TO PLAY");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unocardgamesound/images/about image.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 340, 250));

        text.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        text.setText("<html> <p><strong>STEP 1:</strong>Dealer shuffles the deck and deals 7 cards face down to each player. Place the remaining cards face down to form a Draw Pile.</p> <br></br> <p><strong>STEP 2:</strong>Turn over the top card of the draw pile to begin a Discard Pile.</p> <br></br> <p><strong>STEP 3:</strong> The players will take the turns to the order of the names entered.</p> <br></br> <p><strong>STEP 4:</strong> The players have to find a card from their respective hands that matches the top card of the Discard Pile either by the number, color, or the symbol. Then click the card from your hand to add it to the Pile.You can also play a Wild card or a Wild Draw Four card anytime you like.</p> <br></br> <p><strong>STEP 4:</strong> If the player has no matches they must draw a card by clicking the Draw pile. If that card can be played, play it. Otherwise, keep the card</p> <br></br> <p><strong>STEP 5:&nbsp;</strong>After a match is made or a card is drawn from the Draw Pile it will automatically move to the next player&#39;s turn. The moment a player has just one card he/she must click &#39;UNO&#39; before clicking on the last card. If not, that player must draw two new cards as a penalty.</p> <br></br> <p><strong>STEP 6:</strong>The round ends when one player is out of cards.</p> <br></br> <p><strong>STEP 7:</strong> A new round will begin until one of the players score 500 points.</p> <br></br> <p>(Check SCORE to see how the points are allocated)</p> </html>");
        getContentPane().add(text, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 1140, 370));

        jLabel3.setBackground(new java.awt.Color(239, 255, 255));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1180, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
       Music m = new Music();
        m.buttonClick();
        new Instructions().setVisible(true); // Displays the Instructions menu again
        dispose(); //close the current frame
    }//GEN-LAST:event_backButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
         Music m = new Music();
        m.buttonClick();
        new Menu().setVisible(true); // Displays the Main menu again
        dispose(); //close the current frame
    }//GEN-LAST:event_homeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HowToPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HowToPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HowToPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HowToPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HowToPlay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel text;
    // End of variables declaration//GEN-END:variables
}
